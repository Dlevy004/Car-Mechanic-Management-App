@page "/"

@using CarMechanic.Shared.Models;

<CarMechanic.Client.Components.Navbar showCustomers="showCustomers"
                                      OnPanelChange="PanelChanged" />

<CarMechanic.Client.Components.AddCustomerPanel IsVisible="isAddCustomerPanelVisible"
                                                CustomerToEdit="customerToEdit"
                                                OnClose="ClosePanel" />

<CarMechanic.Client.Components.AddJobPanel IsVisible="isAddJobPanelVisible"
                                           JobToEdit="jobToEdit"
                                           OnClose="ClosePanel" />

<div class="panel-container @(showCustomers ? "show-customers" : "show-jobs")">
    <div class="panel customer-panel">
		<CarMechanic.Client.Components.Customers @ref="customersComponent"
        OnAddCustomer="OpenCustomerPanel"/>
    </div>

    <div class="panel jobs-panel">
		<CarMechanic.Client.Components.Jobs @ref="jobsComponent"
        OnAddJob="OpenJobPanel"/>
    </div>
</div>

@code {
    public bool showCustomers = true;
    private CarMechanic.Client.Components.Customers customersComponent;
    private CarMechanic.Client.Components.Jobs jobsComponent;
    private bool isAddCustomerPanelVisible = false;
    private bool isAddJobPanelVisible = false;
    private Customer customerToEdit;
    private Job jobToEdit;

    private void OpenCustomerPanel(Customer customer)
    {
        customerToEdit = customer;
        isAddCustomerPanelVisible = true;
    }

    private void OpenJobPanel(Job job)
    {
        jobToEdit = job; // Ha job null, akkor 'Add', else 'Edit'
        isAddJobPanelVisible = true;
    }

    private void PanelChanged(bool isCustomersSelected)
    {
        showCustomers = isCustomersSelected;
    }

    private async Task ClosePanel()
    {
        bool wasCustomerPanelVisible = isAddCustomerPanelVisible;
        bool wasJobPanelVisible = isAddJobPanelVisible;

        isAddCustomerPanelVisible = false;
        isAddJobPanelVisible = false;
        customerToEdit = null;
        jobToEdit = null;

        StateHasChanged();

        if (wasCustomerPanelVisible)
        {
            await customersComponent.LoadCustomers();
        }

        if (wasJobPanelVisible)
        {
            await jobsComponent.LoadJobs();
        }
    }
}
