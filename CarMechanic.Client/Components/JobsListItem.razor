@using CarMechanic.Shared.Models
@using CarMechanic.Shared.Enums

<tr>
    <td>@Job.Id</td>
    <td>@Job.CustomerId</td>
    <td>@Job.LicensePlateNumber</td>
    <td>@Job.JobCategory.ToString()</td>
    <td>@Job.JobStage.ToString()</td>
    <td>@WorkHourEstimation.ToString("0.0") hours</td>
    <td class="actions">
        <button class="addJobBtn" @onclick="() => OnEdit.InvokeAsync(Job)">
            <img class="anim lightImg" src="./images/edit_square_24dp_2D425C_FILL0_wght400_GRAD0_opsz24.svg" alt="Edit job icon">
            <img class="anim darkImg" src="./images/edit_square_24dp_E2E1E2_FILL0_wght400_GRAD0_opsz24.svg" alt="Edit job icon darkmode">
        </button>

        <button class="deleteBtn" @onclick="() => OnDelete.InvokeAsync(Job.Id)">
            <img class="anim lightImg" src="./images/delete_24dp_2D425C_FILL0_wght400_GRAD0_opsz24.svg" alt="Delete job icon">
            <img class="anim darkImg" src="./images/delete_24dp_E2E1E2_FILL0_wght400_GRAD0_opsz24.svg" alt="Delete job icon darkmode">
        </button>
    </td>
</tr>

@code {
    [Parameter] public Job Job { get; set; }
    [Parameter] public double WorkHourEstimation { get; set; }

    [Parameter] public EventCallback<int> OnViewDetails { get; set; }
    [Parameter] public EventCallback<Job> OnEdit { get; set; }
    [Parameter] public EventCallback<int> OnDelete { get; set; }

}
